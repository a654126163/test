


1、docker帮助命令：
     （1）docker version 个人信息的简述
     （2）docker info 个人信息的描述
     （3）docker --help 各种控制命令

2、镜像命令：
     （1）docker images 查看本机的镜像
          （1.1） docker images -a 列出本机镜像（含中间镜像层）
          （1.2） docker images -q 列出本地唯一id
          （1.3） docker images -aq 批量删除用到
          （1.4） docker images --digests 显示摘要信息
          （1.5） docker images --no-trunc 显示完整的镜像信息

     （2）docker search 某个XXX镜像的名字 （去https://hub.docker.com 找信息）
          （2.1） docker search -s 30 tomcat 点赞数超过30
          （2.2） docker search -s 30 --no-trunc tomcat 显示详细信息
        
     （3）docker pull 某个XXX镜像的名字
          （3.1） docker pull 镜像的名字：【：TAG】下载镜像 ：加版本号不加最新版本

     （4）docker rmi 某个XXX镜像的名字id
           (4.1) docker rmi -f 名字:[版本号]默认是最新latest （单个删除）
           (4.2) docker rmi -f 镜像名字或id，用空格隔开      （多个删除）    
           (4.3) docker rmi -f $(docker images -qa)           (删除全部)

3、容器命令：
     （1）下载一个CentOS镜像演示 docker pull centos；
  
     （2）新建并启动容器docker run -it 容器id  
          （2.1）-i： 以交互模式运行容器，通常与-t同时使用；
          （2.2）-t： 为容器重新分配一个伪输入终端，通常与-i同时使用；
          （2.3）--name="容器新名字"：为容器指定一个名称； docker run -it --name 容器的别名  启动的容器名 
          （2.4）-d：后台运行容器，并返回容器id，也即启动守护式容器
          （2.5）-P：随机端口映射：
          （2.6）-p:指定端口映射：有以下四种格式
                   ip:hostPort:containerPort
                   ip:containerPort
                   hostPort:containerPort
                   containerPort 
           
     （3）docker ps 查询当前启动的容器
           （3.1）docker ps -L 查看上一个启动过的容器；
           （3.2）docker ps -a 查看历史运行过的容器；
           （3.3）docker ps -n 3 查看上三次运行过的容器；
           （3.4）docker ps -q  只显示容器编号；

      (4)退出容器有两种
           （4.1）  exeit  容器停止退出
           （4.2）  ctrl+P+Q  容器不停止退出

     （5）启动容器；
           （5.1）docker start 容器id或容器名字；
     （6）重启容器：
           （6.1）docker restart 容器id或容器名字；
     （7）停止容器：
           （7.1）docker stop  容器id或容器名字 （缓慢）
           （7.2）docker kill   容器id或容器名字；(强制)

     （8）删除已停止的容器
            （8.1） docker  rm 容器id或容器名字 （已关闭）
            （8.2） docker  rm  -f 容器id或容器名字 （强制） 
            （8.3） docker  rm  -f $(docker ps -a -q)（批量删除）
            （8.4） docker  ps -a -q|xargs docker rm（批量删除）
                        
4、重要：
      1、启动守护式容器；
           （1.1） docker run -d 容器名字；
      2、查询日志；
           （2.1）docker logs -f -t --tail 容器id  -t是加入时间戳，-f跟踪最新的日志打印，--tail数字显示最后多少条（后台启动docker不自动关闭）
                   docker run -d centos /bin/sh -c "while true;do echo hell liu;sleep 2;done"
      
      3、查看容器内的进程
           （3.1）docker top 容器id或容器名字 

      4、查看容器的内部细节
           （4.1）docker inspect 容器id

      5、进入正在运行的容器并以命令进行交互
           （5.1）docker attach 容器id 再次重新进入容器
           （5.2）docker exec -t 容器id  ls -l/tmp 没有进入容器在外面可以操作容器命令
      6、从容器内拷贝文件到主机上
           （6.1）docker cp 容器id ：容器内路径  目的主机路径
5、docker镜像
      1、是什么
        1.1、UnionFS（联合文件系统）
        1.2、Docker 镜像加载原理
        1.3、分层的镜像
        1.4、为什么Docker镜像要采用这种分层结构呢 
            1.1.1共享资源 base镜像
      2、特点
        2.1只读
6、docker 镜像commit补充
      1、docker run -it -p 8080:8080 tomcat 启动tomcat
         1.1、后台方式启动 docker run -d -p 6666:8888 tomcat
      2、docker commit -m“提交的描述信息” -a“作者” 容器的id 要创建的目标镜像名：【标签号】
        翻译：docker commit -m“tomcat without docs” -a“liu” 容器的id  atguigu/mytomcat：1.2

7、DockerFile解析
8、Docker常用的安装
9、本地镜像发布到阿里云
            






通过docker images看到本地存放了两个镜像，
docker run *命令可以简单的在某个镜像文件基础上启动一个容器。

接下来要做的就是将镜像文件使用save命令导出为tar文件：
docker save 38463a656de8> /root/sitespeed.tar

通过物理设备传输至离线服务器上，通过load命令导入镜像：
docker load < /root/sitespeed.tar

导入完成后，用docker images命令查看，惊奇的发现REPOSITORY和TAG列均为，所以save命令保存的并不是所有的信息，具体的区别自行搜索即可。不过不影响使用，我们只要修改一下就可以正常使用了。
docker tag 38463a656de8 docker.io/sitespeedio/sitespeed.io:latest
--------------------- 

用户/密码    weblogic/welcome1
